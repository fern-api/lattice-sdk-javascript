// This file was auto-generated by Fern from our API Definition.

import type * as Lattice from "../index.js";

/**
 * Available for Entities that are tracked.
 */
export interface Tracked {
    /** Quality score, 0-15, nil if none */
    trackQualityWrapper?: number;
    /** Sensor hits aggregation on the tracked entity. */
    sensorHits?: number;
    /**
     * Estimated number of objects or units that are represented by this entity. Known as Strength in certain contexts (Link16)
     *  if UpperBound == LowerBound; (strength = LowerBound)
     *  If both UpperBound and LowerBound are defined; strength is between LowerBound and UpperBound (represented as string "Strength: 4-5")
     *  If UpperBound is defined only (LowerBound unset), Strength ≤ UpperBound
     *  If LowerBound is defined only (UpperBound unset), LowerBound ≤ Strength
     *  0 indicates unset.
     */
    numberOfObjects?: Lattice.UInt32Range;
    /**
     * The radar cross section (RCS) is a measure of how detectable an object is by radar. A large RCS indicates an object is more easily
     *  detected. The unit is “decibels per square meter,” or dBsm
     */
    radarCrossSection?: number;
    /** Timestamp of the latest tracking measurement for this entity. */
    lastMeasurementTime?: string;
    /**
     * The relative position of a track with respect to the entity that is tracking it. Used for tracks that do not yet have a 3D position.
     *  For this entity (A), being tracked by some entity (B), this LineOfBearing would express a ray from B to A.
     */
    lineOfBearing?: Lattice.LineOfBearing;
}
